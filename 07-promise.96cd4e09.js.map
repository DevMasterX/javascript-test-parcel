{"mappings":"AAyBA,SAASA,cACP,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAASC,KAAKC,SAAW,GAE/BC,YAAW,WACLH,GACFF,EAAQ,qBAERC,EAAK,mB,GACN,I,IAGPH,cACGQ,MAAK,SAAAC,G,OAAUC,QAAQC,IAAIF,E,IAC3BG,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E","sources":["src/js/07-promise.js"],"sourcesContent":["// const promise = new Promise((resolve, reject) => {\n//   const canFulfill = Math.random() > 0.5;\n\n//   setTimeout(() => {\n//     if (canFulfill) {\n//       resolve('Промис выполнился успешно, с результатом исполнен');\n//     }\n//     reject('Промис выполнился с ошибкой');\n//   }, 1000);\n// });\n\n// // promise.then(onFulfilled, onRejected);\n\n// function onFulfilled(result) {\n//   console.log(result);\n// }\n\n// function onRejected(error) {\n//   console.log(error);\n// }\n\n// promise.then(result => {\n//   console.log(result);\n// });\n\nfunction makePromise() {\n  return new Promise((resolve, reject) => {\n    const passed = Math.random() > 0.5;\n\n    setTimeout(() => {\n      if (passed) {\n        resolve('✅ this is resolve');\n      }\n      reject('❌ this is reject');\n    }, 2000);\n  });\n}\nmakePromise()\n  .then(result => console.log(result))\n  .catch(error => console.log(error));\n"],"names":["makePromise","Promise","resolve","reject","passed","Math","random","setTimeout","then","result","console","log","catch","error"],"version":3,"file":"07-promise.96cd4e09.js.map"}