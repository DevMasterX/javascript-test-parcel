{"mappings":"C,A,WCAA,IAAM,EAAW,wBAmCjB,SAAS,EAAe,CAAM,CAAE,CAAM,EACpC,IAAM,EAAU,CACd,OAAQ,QACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,SAAS,CAAC,EACvB,EAEA,OAAO,MAAO,GAAoB,MAAA,CAAlB,EAAS,WAAgB,MAAA,CAAP,GAAU,GAAS,IAAI,CAAC,SAAA,CAA1D,EAAiE,OAAA,EAAI,IAAI,E,EAC3E,CAgBA,SAAS,EAAW,CAAM,EAMxB,OAAO,MALK,GAAqB,MAAA,CAAlB,EAAS,WAAgB,MAAA,CAAP,GACjB,CACd,OAAQ,QACV,GAE2B,IAAI,CAAC,SAAA,CAAhC,EAAuC,OAAA,EAAI,IAAI,E,EACjD,CAtBA,EACE,CACE,MAAO,2BACT,EACA,GAEF,EACE,CACE,MAAO,WACT,EACA,GAaF,EAAW,GACX,EAAW,E","sources":["<anon>","src/js/CRUD.js"],"sourcesContent":["(function () {\nvar $da57c54b63f3d6bc$exports = {};\nvar $da57c54b63f3d6bc$var$BASE_URL = 'http://localhost:3000';\n// --------------GET---------------------------------\nfunction $da57c54b63f3d6bc$var$fetchBooks() {\n    return fetch(\"\".concat($da57c54b63f3d6bc$var$BASE_URL, \"/books\")).then(function(res) {\n        return res.json();\n    });\n}\nfunction $da57c54b63f3d6bc$var$fetchBookById(bookId) {\n    return fetch(\"\".concat($da57c54b63f3d6bc$var$BASE_URL, \"/books/\").concat(bookId)).then(function(res) {\n        return res.json();\n    });\n}\n// ---------------------POST----------------------\nvar $da57c54b63f3d6bc$var$newBook = {\n    title: \"\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u0430\\u044F \\u043A\\u043D\\u0438\\u0433\\u0430 JS\",\n    author: \"\\u042F\",\n    genres: [\n        'JS'\n    ],\n    rating: 10\n};\nfunction $da57c54b63f3d6bc$var$addBook(book) {\n    var options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(book)\n    };\n    return fetch(\"\".concat($da57c54b63f3d6bc$var$BASE_URL, \"/books/13\"), options).then(function(res) {\n        return res.json();\n    });\n}\n// ---------------------PUT/PATCH----------------------\nfunction $da57c54b63f3d6bc$var$updateBookById(update, bookId) {\n    var options = {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(update)\n    };\n    return fetch(\"\".concat($da57c54b63f3d6bc$var$BASE_URL, \"/books/\").concat(bookId), options).then(function(res) {\n        return res.json();\n    });\n}\n$da57c54b63f3d6bc$var$updateBookById({\n    title: \"\\u0411\\u043E\\u043B\\u044C\\u0448\\u0430\\u044F \\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u0430\\u044F \\u043A\\u043D\\u0438\\u0433\\u0430 JS\"\n}, 1);\n$da57c54b63f3d6bc$var$updateBookById({\n    title: \"\\u043A\\u043D\\u0438\\u0433\\u0430 CSS\"\n}, 2);\n// ---------------------DELETE---------------------\nfunction $da57c54b63f3d6bc$var$removeBook(bookId) {\n    var url = \"\".concat($da57c54b63f3d6bc$var$BASE_URL, \"/books/\").concat(bookId);\n    var options = {\n        method: 'DELETE'\n    };\n    return fetch(url, options).then(function(res) {\n        return res.json();\n    });\n}\n$da57c54b63f3d6bc$var$removeBook(1);\n$da57c54b63f3d6bc$var$removeBook(2);\n\n})();\n//# sourceMappingURL=CRUD.13251398.js.map\n","const BASE_URL = 'http://localhost:3000';\n\n// --------------GET---------------------------------\n\nfunction fetchBooks() {\n  return fetch(`${BASE_URL}/books`).then(res => res.json());\n}\n\nfunction fetchBookById(bookId) {\n  return fetch(`${BASE_URL}/books/${bookId}`).then(res => res.json());\n}\n\n// ---------------------POST----------------------\n\nconst newBook = {\n  title: 'Тестовая книга JS',\n  author: 'Я',\n  genres: ['JS'],\n  rating: 10,\n};\n\nfunction addBook(book) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(book),\n  };\n\n  return fetch(`${BASE_URL}/books/13`, options).then(res => res.json());\n}\n\n// ---------------------PUT/PATCH----------------------\n\nfunction updateBookById(update, bookId) {\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(update),\n  };\n\n  return fetch(`${BASE_URL}/books/${bookId}`, options).then(res => res.json());\n}\nupdateBookById(\n  {\n    title: 'Большая Тестовая книга JS',\n  },\n  1\n);\nupdateBookById(\n  {\n    title: 'книга CSS',\n  },\n  2\n);\n\n// ---------------------DELETE---------------------\n\nfunction removeBook(bookId) {\n  const url = `${BASE_URL}/books/${bookId}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  return fetch(url, options).then(res => res.json());\n}\nremoveBook(1);\nremoveBook(2);\n"],"names":["$da57c54b63f3d6bc$var$BASE_URL","$da57c54b63f3d6bc$var$updateBookById","update","bookId","options","method","headers","body","JSON","stringify","fetch","concat","then","res","json","$da57c54b63f3d6bc$var$removeBook","title"],"version":3,"file":"CRUD.13251398.js.map"}