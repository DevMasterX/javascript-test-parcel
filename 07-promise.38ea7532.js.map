{"mappings":"AAwCA,MAAMA,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAaC,KAAKC,SAAW,GAEnCC,YAAW,KACLH,GACFF,EAAQ,kEAGiCC,EAApC,mDAAmD,GACzD,IAAK,IAGVH,EAAQQ,MAAKC,IACXC,QAAQC,IAAIF,EAAO,IAGrBC,QAAQC,IAAIX","sources":["src/js/07-promise.js"],"sourcesContent":["// const promise = new Promise((resolve, reject) => {\n//   const canFulfill = Math.random() > 0.5;\n\n//   setTimeout(() => {\n//     if (canFulfill) {\n//       resolve('Промис выполнился успешно, с результатом исполнен');\n//     }\n//     reject('Промис выполнился с ошибкой');\n//   }, 1000);\n// });\n\n// // promise.then(onFulfilled, onRejected);\n\n// function onFulfilled(result) {\n//   console.log(result);\n// }\n\n// function onRejected(error) {\n//   console.log(error);\n// }\n\n// promise.then(result => {\n//   console.log(result);\n// });\n\n// function makePromise() {\n//   return new Promise((resolve, reject) => {\n//     const passed = Math.random() > 0.5;\n\n//     setTimeout(() => {\n//       if (passed) {\n//         resolve('✅ this is resolve');\n//       }\n//       reject('❌ this is reject');\n//     }, 2000);\n//   });\n// }\n// makePromise()\n//   .then(result => console.log(result))\n//   .catch(error => console.log(error));\nconst promise = new Promise((resolve, reject) => {\n  const canFulfill = Math.random() > 0.5;\n\n  setTimeout(() => {\n    if (canFulfill) {\n      resolve('Промис выполнился успешно с результатом (исполнен,  fulfilled)');\n    }\n\n    reject('Промис выполнился с ошибкой (отклонен, rejected)');\n  }, 2000);\n});\n\npromise.then(result => {\n  console.log(result);\n});\n\nconsole.log(promise);\n"],"names":["$939ffef877fffcc9$var$promise","Promise","resolve","reject","canFulfill","Math","random","setTimeout","then","result","console","log"],"version":3,"file":"07-promise.38ea7532.js.map"}